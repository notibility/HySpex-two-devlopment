This is a Python wrapper for HySpexLibrary-v0.15.35.1, generated by SWIG.

It requires 64-bit Python and NumPy running on Windows.

It has been tested with:
Python 3.9 (64-bit)
NumPy 1.21.3 (64-bit)
running on Windows 11

All the matrixes returned are owned by the library, just as in C++, so they are read only numpy arrays in Python.

The entire C++ API is exposed in Python, but only the FileReader part has been tested.
This means that the interface is the same as documented for C++, with some exceptions exception:
ConstBuffer< double >, ConstBuffer< int > and ConstBuffer< unsigned short > are returned as read only numpy arrays where the memory is owned by the library.

This means that if you do:
>>> re = reader.getDoubleMatrix( "RE" )
>>> re[ 5 ] = 51

you will get:
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: assignment destination is read-only

This also means that access a matrix that you got from FileReader after FileReader is deleted will cause a crash, for instance:
>>> reader = HySpexLibrary.FileReader()
>>> reader.open( "SOMEFILE" )
>>> re = reader.getDoubleMatrix( "RE" )
>>> del reader
>>> re[ 51 ]
*CRASH*

There are two examples provided:
ReaderExample.py
CameraExample.py

The CameraExample.py has been tested against a real camera, and a virtual camera, but most functions are still untested.
To use a real camera and stages, the proper files need to be copied (found in the bin folder, if unsure, just copy all of them)

for own development I suggest doing:
import sys
sys.path.append( "PATH_TO_PYTHON_HYSPEX_LIBRARY_WRAPPER" )

instead of putting the code in the same directory, as it will probably make it easier to upgrade later.

NB: To use with a real camera, make sure you copy all the relevant .dll(s) from the bin folder.

Contact hyspexsupport@neo.no if you need a different target, or if there are particular functions that would be useful to have.
