# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _HySpexLibrary
else:
    import _HySpexLibrary

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

HYSPEX_CALIB_RE = _HySpexLibrary.HYSPEX_CALIB_RE
HYSPEX_CALIB_QE = _HySpexLibrary.HYSPEX_CALIB_QE
HYSPEX_CALIB_QE_ALL = _HySpexLibrary.HYSPEX_CALIB_QE_ALL
HYSPEX_CALIB_FULL_SPECTRAL_PER_BAND = _HySpexLibrary.HYSPEX_CALIB_FULL_SPECTRAL_PER_BAND
HYSPEX_CALIB_FULL_SPECTRAL_PER_PIXEL = _HySpexLibrary.HYSPEX_CALIB_FULL_SPECTRAL_PER_PIXEL
HYSPEX_CALIB_SPECTRAL_PER_BAND = _HySpexLibrary.HYSPEX_CALIB_SPECTRAL_PER_BAND
HYSPEX_CALIB_SPECTRAL_PER_PIXEL = _HySpexLibrary.HYSPEX_CALIB_SPECTRAL_PER_PIXEL
HYSPEX_CALIB_SPECTRAL_DELTA_PER_BAND = _HySpexLibrary.HYSPEX_CALIB_SPECTRAL_DELTA_PER_BAND
HYSPEX_CALIB_SPECTRAL_DELTA_PER_PIXEL = _HySpexLibrary.HYSPEX_CALIB_SPECTRAL_DELTA_PER_PIXEL
HYSPEX_CALIB_SPECTRAL_FWHM = _HySpexLibrary.HYSPEX_CALIB_SPECTRAL_FWHM
HYSPEX_CALIB_SENSOR_MODEL = _HySpexLibrary.HYSPEX_CALIB_SENSOR_MODEL
HYSPEX_CALIB_SPATIAL = _HySpexLibrary.HYSPEX_CALIB_SPATIAL
HYSPEX_CALIB_SPATIAL_DELTA = _HySpexLibrary.HYSPEX_CALIB_SPATIAL_DELTA
HYSPEX_CALIB_TEMPERATURE_COMPENSATION_MODEL = _HySpexLibrary.HYSPEX_CALIB_TEMPERATURE_COMPENSATION_MODEL
HYSPEX_CALIB_RESAMPLED_CENTRAL_PIXELS = _HySpexLibrary.HYSPEX_CALIB_RESAMPLED_CENTRAL_PIXELS
HYSPEX_CALIB_RESAMPLED_CENTRAL_WAVELENGTHS = _HySpexLibrary.HYSPEX_CALIB_RESAMPLED_CENTRAL_WAVELENGTHS
HYSPEX_CALIB_RESAMPLED_CENTRAL_WAVELENGTHS_DELTA = _HySpexLibrary.HYSPEX_CALIB_RESAMPLED_CENTRAL_WAVELENGTHS_DELTA
HYSPEX_OK = _HySpexLibrary.HYSPEX_OK
HYSPEX_TIMEOUT_REACHED = _HySpexLibrary.HYSPEX_TIMEOUT_REACHED
HYSPEX_INVALID_HANDLE = _HySpexLibrary.HYSPEX_INVALID_HANDLE
HYSPEX_INVALID_ARGUMENTS = _HySpexLibrary.HYSPEX_INVALID_ARGUMENTS
HYSPEX_ALREADY_ACTIVE = _HySpexLibrary.HYSPEX_ALREADY_ACTIVE
HYSPEX_NOT_ACTIVE = _HySpexLibrary.HYSPEX_NOT_ACTIVE
HYSPEX_INIT_ELECTRONICS_FAILED = _HySpexLibrary.HYSPEX_INIT_ELECTRONICS_FAILED
HYSPEX_INIT_SENSOR_FAILED = _HySpexLibrary.HYSPEX_INIT_SENSOR_FAILED
HYSPEX_INIT_CAMERA_LINK_FAILED = _HySpexLibrary.HYSPEX_INIT_CAMERA_LINK_FAILED
HYSPEX_INIT_SENSOR_NOT_READY = _HySpexLibrary.HYSPEX_INIT_SENSOR_NOT_READY
HYSPEX_CAMERA_NOT_DETECTED = _HySpexLibrary.HYSPEX_CAMERA_NOT_DETECTED
HYSPEX_CAMERA_NOT_INITIALIZED = _HySpexLibrary.HYSPEX_CAMERA_NOT_INITIALIZED
HYSPEX_ELECTRONICS_NOT_INITIALIZED = _HySpexLibrary.HYSPEX_ELECTRONICS_NOT_INITIALIZED
HYSPEX_ELECTRONICS_ACK_NOT_RECEIVED = _HySpexLibrary.HYSPEX_ELECTRONICS_ACK_NOT_RECEIVED
HYSPEX_ELECTRONICS_SEND_COMMAND_FAILED = _HySpexLibrary.HYSPEX_ELECTRONICS_SEND_COMMAND_FAILED
HYSPEX_ELECTRONICS_RESPONSE_INVALID = _HySpexLibrary.HYSPEX_ELECTRONICS_RESPONSE_INVALID
HYSPEX_ELECTRONICS_FEATURE_NOT_SUPPORTED = _HySpexLibrary.HYSPEX_ELECTRONICS_FEATURE_NOT_SUPPORTED
HYSPEX_ELECTRONICS_FDIV_NOT_FOUND = _HySpexLibrary.HYSPEX_ELECTRONICS_FDIV_NOT_FOUND
HYSPEX_SENSOR_COMMAND_FAILED = _HySpexLibrary.HYSPEX_SENSOR_COMMAND_FAILED
HYSPEX_SETTING_NOT_FOUND = _HySpexLibrary.HYSPEX_SETTING_NOT_FOUND
HYSPEX_FAILED_TO_SET_VALUE = _HySpexLibrary.HYSPEX_FAILED_TO_SET_VALUE
HYSPEX_IGNORED_TRIGGER_IS_ACTIVE = _HySpexLibrary.HYSPEX_IGNORED_TRIGGER_IS_ACTIVE
HYSPEX_STATE_ACQUISITION_ALREADY_ACTIVE = _HySpexLibrary.HYSPEX_STATE_ACQUISITION_ALREADY_ACTIVE
HYSPEX_STATE_ACQUISITION_WAS_NOT_ACTIVE = _HySpexLibrary.HYSPEX_STATE_ACQUISITION_WAS_NOT_ACTIVE
HYSPEX_STATE_SHUTTER_NOT_SPECIFIED = _HySpexLibrary.HYSPEX_STATE_SHUTTER_NOT_SPECIFIED
HYSPEX_CAMERALINK_SERVER_NOT_FOUND = _HySpexLibrary.HYSPEX_CAMERALINK_SERVER_NOT_FOUND
HYSPEX_CAMERALINK_CCF_FILE_NOT_FOUND = _HySpexLibrary.HYSPEX_CAMERALINK_CCF_FILE_NOT_FOUND
HYSPEX_CAMERALINK_CREATE_ACQUISITION_FAILED = _HySpexLibrary.HYSPEX_CAMERALINK_CREATE_ACQUISITION_FAILED
HYSPEX_CAMERALINK_CREATE_BUFFER_FAILED = _HySpexLibrary.HYSPEX_CAMERALINK_CREATE_BUFFER_FAILED
HYSPEX_CAMERALINK_CREATE_PROCESSING_FAILED = _HySpexLibrary.HYSPEX_CAMERALINK_CREATE_PROCESSING_FAILED
HYSPEX_CAMERALINK_CREATE_TRANSFER_FAILED = _HySpexLibrary.HYSPEX_CAMERALINK_CREATE_TRANSFER_FAILED
HYSPEX_CAMERALINK_GIO_NOT_FOUND = _HySpexLibrary.HYSPEX_CAMERALINK_GIO_NOT_FOUND
HYSPEX_CAMERALINK_GIO_INIT_FAILED = _HySpexLibrary.HYSPEX_CAMERALINK_GIO_INIT_FAILED
HYSPEX_ROI_NOT_SUPPORTED = _HySpexLibrary.HYSPEX_ROI_NOT_SUPPORTED
HYSPEX_ROI_SPATIAL_NOT_SUPPORTED = _HySpexLibrary.HYSPEX_ROI_SPATIAL_NOT_SUPPORTED
HYSPEX_ROI_SPATIAL_EXCEEDED_IMAGE_SIZE = _HySpexLibrary.HYSPEX_ROI_SPATIAL_EXCEEDED_IMAGE_SIZE
HYSPEX_ROI_SPATIAL_NOT_DIVISIBLE_BY_RESTRICTION = _HySpexLibrary.HYSPEX_ROI_SPATIAL_NOT_DIVISIBLE_BY_RESTRICTION
HYSPEX_ROI_SPECTRAL_NOT_SUPPORTED = _HySpexLibrary.HYSPEX_ROI_SPECTRAL_NOT_SUPPORTED
HYSPEX_ROI_SPECTRAL_EXCEEDED_IMAGE_SIZE = _HySpexLibrary.HYSPEX_ROI_SPECTRAL_EXCEEDED_IMAGE_SIZE
HYSPEX_ROI_SPECTRAL_EXCEEDED_MAX_COUNT = _HySpexLibrary.HYSPEX_ROI_SPECTRAL_EXCEEDED_MAX_COUNT
HYSPEX_BINNING_NOT_SUPPORTED = _HySpexLibrary.HYSPEX_BINNING_NOT_SUPPORTED
HYSPEX_STAGE_SET_CURRENT_POSITION_FAILED = _HySpexLibrary.HYSPEX_STAGE_SET_CURRENT_POSITION_FAILED
HYSPEX_STAGE_INIT_FAILED = _HySpexLibrary.HYSPEX_STAGE_INIT_FAILED
HYSPEX_STAGE_GET_DEVICES_FAILED = _HySpexLibrary.HYSPEX_STAGE_GET_DEVICES_FAILED
HYSPEX_STAGE_GET_MOVE_SETTINGS_FAILED = _HySpexLibrary.HYSPEX_STAGE_GET_MOVE_SETTINGS_FAILED
HYSPEX_STAGE_SET_MOVE_SETTINGS_FAILED = _HySpexLibrary.HYSPEX_STAGE_SET_MOVE_SETTINGS_FAILED
HYSPEX_STAGE_GET_ENGINE_SETTINGS_FAILED = _HySpexLibrary.HYSPEX_STAGE_GET_ENGINE_SETTINGS_FAILED
HYSPEX_STAGE_SET_ENGINE_SETTINGS_FAILED = _HySpexLibrary.HYSPEX_STAGE_SET_ENGINE_SETTINGS_FAILED
HYSPEX_STAGE_START_FAILED = _HySpexLibrary.HYSPEX_STAGE_START_FAILED
HYSPEX_STAGE_STOP_FAILED = _HySpexLibrary.HYSPEX_STAGE_STOP_FAILED
HYSPEX_STAGE_OUT_OF_RANGE = _HySpexLibrary.HYSPEX_STAGE_OUT_OF_RANGE
HYSPEX_STAGE_GET_ENCODER_VALUE_FAILED = _HySpexLibrary.HYSPEX_STAGE_GET_ENCODER_VALUE_FAILED
HYSPEX_STAGE_GET_PRODUCT_INFO_FAILED = _HySpexLibrary.HYSPEX_STAGE_GET_PRODUCT_INFO_FAILED
HYSPEX_STAGE_OPEN_FAILED = _HySpexLibrary.HYSPEX_STAGE_OPEN_FAILED
HYSPEX_STAGE_FLUSH_FAILED = _HySpexLibrary.HYSPEX_STAGE_FLUSH_FAILED
HYSPEX_STAGE_CLOSE_FAILED = _HySpexLibrary.HYSPEX_STAGE_CLOSE_FAILED
HYSPEX_STAGE_SEND_FAILED = _HySpexLibrary.HYSPEX_STAGE_SEND_FAILED
HYSPEX_NOT_IMPLEMENTED = _HySpexLibrary.HYSPEX_NOT_IMPLEMENTED
HYSPEX_ACQ_STOPPED = _HySpexLibrary.HYSPEX_ACQ_STOPPED
HYSPEX_ACQ_PENDING = _HySpexLibrary.HYSPEX_ACQ_PENDING
HYSPEX_ACQ_RUNNING = _HySpexLibrary.HYSPEX_ACQ_RUNNING
HYSPEX_ACQ_TERMINATED_DUE_TO_OVERFLOW = _HySpexLibrary.HYSPEX_ACQ_TERMINATED_DUE_TO_OVERFLOW
HYSPEX_ACQ_TERMINATED_DUE_TO_TRASH = _HySpexLibrary.HYSPEX_ACQ_TERMINATED_DUE_TO_TRASH
HYSPEX_ACQ_TERMINATED_DUE_TO_ERROR = _HySpexLibrary.HYSPEX_ACQ_TERMINATED_DUE_TO_ERROR
HYSPEX_ACQ_TERMINATED_DUE_TO_FRAME_PERIOD_MISMATCH = _HySpexLibrary.HYSPEX_ACQ_TERMINATED_DUE_TO_FRAME_PERIOD_MISMATCH
HYSPEX_ACQ_TERMINATED_DUE_TO_TIMEOUT = _HySpexLibrary.HYSPEX_ACQ_TERMINATED_DUE_TO_TIMEOUT
HYSPEX_ACQ_TERMINATED_DUE_TO_CRITICAL_READER_TOO_SLOW = _HySpexLibrary.HYSPEX_ACQ_TERMINATED_DUE_TO_CRITICAL_READER_TOO_SLOW
HYSPEX_BG_INVALID = _HySpexLibrary.HYSPEX_BG_INVALID
HYSPEX_BG_PENDING = _HySpexLibrary.HYSPEX_BG_PENDING
HYSPEX_BG_VALID = _HySpexLibrary.HYSPEX_BG_VALID
HYSPEX_BG_PENDING_READY = _HySpexLibrary.HYSPEX_BG_PENDING_READY
HYSPEX_BG_EXPIRED = _HySpexLibrary.HYSPEX_BG_EXPIRED
HYSPEX_BG_ABORTED = _HySpexLibrary.HYSPEX_BG_ABORTED
HYSPEX_INIT_PENDING_DETECTION = _HySpexLibrary.HYSPEX_INIT_PENDING_DETECTION
HYSPEX_INIT_PENDING_ELECTRONICS = _HySpexLibrary.HYSPEX_INIT_PENDING_ELECTRONICS
HYSPEX_INIT_PENDING_SENSOR = _HySpexLibrary.HYSPEX_INIT_PENDING_SENSOR
HYSPEX_INIT_PENDING_TRANSPORT = _HySpexLibrary.HYSPEX_INIT_PENDING_TRANSPORT
HYSPEX_INIT_OK = _HySpexLibrary.HYSPEX_INIT_OK
HYSPEX_INIT_FAILED_DETECTION = _HySpexLibrary.HYSPEX_INIT_FAILED_DETECTION
HYSPEX_INIT_FAILED_ELECTRONICS = _HySpexLibrary.HYSPEX_INIT_FAILED_ELECTRONICS
HYSPEX_INIT_FAILED_SENSOR = _HySpexLibrary.HYSPEX_INIT_FAILED_SENSOR
HYSPEX_INIT_FAILED_TRANSPORT = _HySpexLibrary.HYSPEX_INIT_FAILED_TRANSPORT
HYSPEX_INIT_NOT_STARTED = _HySpexLibrary.HYSPEX_INIT_NOT_STARTED
HYSPEX_SHUTTER_OPEN = _HySpexLibrary.HYSPEX_SHUTTER_OPEN
HYSPEX_SHUTTER_CLOSED = _HySpexLibrary.HYSPEX_SHUTTER_CLOSED
HYSPEX_SHUTTER_PENDING_OPEN = _HySpexLibrary.HYSPEX_SHUTTER_PENDING_OPEN
HYSPEX_SHUTTER_PENDING_CLOSE = _HySpexLibrary.HYSPEX_SHUTTER_PENDING_CLOSE
HYSPEX_SHUTTER_FAIL_OPEN = _HySpexLibrary.HYSPEX_SHUTTER_FAIL_OPEN
HYSPEX_SHUTTER_FAIL_CLOSE = _HySpexLibrary.HYSPEX_SHUTTER_FAIL_CLOSE
HYSPEX_SHUTTER_UNKNOWN = _HySpexLibrary.HYSPEX_SHUTTER_UNKNOWN
HYSPEX_COMM_INIT = _HySpexLibrary.HYSPEX_COMM_INIT
HYSPEX_COMM_OK = _HySpexLibrary.HYSPEX_COMM_OK
HYSPEX_COMM_FAILED_ELECTRONICS = _HySpexLibrary.HYSPEX_COMM_FAILED_ELECTRONICS
HYSPEX_COMM_FAILED_SENSOR = _HySpexLibrary.HYSPEX_COMM_FAILED_SENSOR
HYSPEX_COMM_FAILED_ELECTRONICS_AND_SENSOR = _HySpexLibrary.HYSPEX_COMM_FAILED_ELECTRONICS_AND_SENSOR
HYSPEX_COOLING_STABLE_OK = _HySpexLibrary.HYSPEX_COOLING_STABLE_OK
HYSPEX_COOLING_NOT_STABILIZED = _HySpexLibrary.HYSPEX_COOLING_NOT_STABILIZED
HYSPEX_COOLING_STABLE_DEGRADED = _HySpexLibrary.HYSPEX_COOLING_STABLE_DEGRADED
HYSPEX_COOLING_OUT_OF_RANGE = _HySpexLibrary.HYSPEX_COOLING_OUT_OF_RANGE
HYSPEX_COOLING_FAILED_COMMUNICATION = _HySpexLibrary.HYSPEX_COOLING_FAILED_COMMUNICATION
HYSPEX_COOLING_UNKNOWN = _HySpexLibrary.HYSPEX_COOLING_UNKNOWN
HYSPEX_EVENT_ACQUISITION_STATUS_CHANGED = _HySpexLibrary.HYSPEX_EVENT_ACQUISITION_STATUS_CHANGED
HYSPEX_EVENT_COOLING_STATUS_CHANGED = _HySpexLibrary.HYSPEX_EVENT_COOLING_STATUS_CHANGED
HYSPEX_EVENT_BACKGROUND_STATUS_CHANGED = _HySpexLibrary.HYSPEX_EVENT_BACKGROUND_STATUS_CHANGED
HYSPEX_EVENT_INIT_STATUS_CHANGED = _HySpexLibrary.HYSPEX_EVENT_INIT_STATUS_CHANGED
HYSPEX_EVENT_SHUTTER_STATUS_CHANGED = _HySpexLibrary.HYSPEX_EVENT_SHUTTER_STATUS_CHANGED
HYSPEX_EVENT_COMMUNICATION_STATUS_CHANGED = _HySpexLibrary.HYSPEX_EVENT_COMMUNICATION_STATUS_CHANGED
HYSPEX_EVENT_MANUAL_SHUTTER_OPEN_REQUEST = _HySpexLibrary.HYSPEX_EVENT_MANUAL_SHUTTER_OPEN_REQUEST
HYSPEX_EVENT_MANUAL_SHUTTER_CLOSE_REQUEST = _HySpexLibrary.HYSPEX_EVENT_MANUAL_SHUTTER_CLOSE_REQUEST
HYSPEX_EVENT_ERROR = _HySpexLibrary.HYSPEX_EVENT_ERROR
HYSPEX_EVENT_WARNING = _HySpexLibrary.HYSPEX_EVENT_WARNING
HYSPEX_RAW = _HySpexLibrary.HYSPEX_RAW
HYSPEX_BGSUB = _HySpexLibrary.HYSPEX_BGSUB
HYSPEX_RE = _HySpexLibrary.HYSPEX_RE
HYSPEX_RAW_BP = _HySpexLibrary.HYSPEX_RAW_BP
HYSPEX_HSNR_RAW = _HySpexLibrary.HYSPEX_HSNR_RAW
HYSPEX_HSNR_RE = _HySpexLibrary.HYSPEX_HSNR_RE
HYSPEX_HSNR_RAW_BP = _HySpexLibrary.HYSPEX_HSNR_RAW_BP
HYSPEX_RECORDING_PENDING_START = _HySpexLibrary.HYSPEX_RECORDING_PENDING_START
HYSPEX_RECORDING_STARTED = _HySpexLibrary.HYSPEX_RECORDING_STARTED
HYSPEX_RECORDING_PENDING_STOP = _HySpexLibrary.HYSPEX_RECORDING_PENDING_STOP
HYSPEX_RECORDING_STOPPED = _HySpexLibrary.HYSPEX_RECORDING_STOPPED
HYSPEX_RECORDING_BACKGROUND_AT_END_BLOCKED = _HySpexLibrary.HYSPEX_RECORDING_BACKGROUND_AT_END_BLOCKED
HYSPEX_RECORDING_STOPPED_BY_LOST_FRAMES = _HySpexLibrary.HYSPEX_RECORDING_STOPPED_BY_LOST_FRAMES
HYSPEX_RECORDING_STOPPED_DUE_TO_WRITE_FAIL = _HySpexLibrary.HYSPEX_RECORDING_STOPPED_DUE_TO_WRITE_FAIL
HYSPEX_RECORDING_STOPPED_DUE_TO_OVERFLOW = _HySpexLibrary.HYSPEX_RECORDING_STOPPED_DUE_TO_OVERFLOW
HYSPEX_GAINMODE_LOW = _HySpexLibrary.HYSPEX_GAINMODE_LOW
HYSPEX_GAINMODE_MEDIUM = _HySpexLibrary.HYSPEX_GAINMODE_MEDIUM
HYSPEX_GAINMODE_HIGH = _HySpexLibrary.HYSPEX_GAINMODE_HIGH
HYSPEX_GAINMODE_NONE = _HySpexLibrary.HYSPEX_GAINMODE_NONE
HYSPEX_GAINMODE_INVALID = _HySpexLibrary.HYSPEX_GAINMODE_INVALID
HYSPEX_WRID_VNIR = _HySpexLibrary.HYSPEX_WRID_VNIR
HYSPEX_WRID_SWIR = _HySpexLibrary.HYSPEX_WRID_SWIR
HYSPEX_WRID_SWIRi = _HySpexLibrary.HYSPEX_WRID_SWIRi
HYSPEX_WRID_UNDEFINED = _HySpexLibrary.HYSPEX_WRID_UNDEFINED
HYSPEX_CAMERA_MODEL_IACOBUS = _HySpexLibrary.HYSPEX_CAMERA_MODEL_IACOBUS
HYSPEX_CAMERA_MODEL_SIMULATOR = _HySpexLibrary.HYSPEX_CAMERA_MODEL_SIMULATOR
HYSPEX_CAMERA_MODEL_VNIR1024 = _HySpexLibrary.HYSPEX_CAMERA_MODEL_VNIR1024
HYSPEX_CAMERA_MODEL_VNIR1600 = _HySpexLibrary.HYSPEX_CAMERA_MODEL_VNIR1600
HYSPEX_CAMERA_MODEL_VNIR1800 = _HySpexLibrary.HYSPEX_CAMERA_MODEL_VNIR1800
HYSPEX_CAMERA_MODEL_VNIR3000N = _HySpexLibrary.HYSPEX_CAMERA_MODEL_VNIR3000N
HYSPEX_CAMERA_MODEL_SWIR384 = _HySpexLibrary.HYSPEX_CAMERA_MODEL_SWIR384
HYSPEX_CAMERA_MODEL_SWIR640 = _HySpexLibrary.HYSPEX_CAMERA_MODEL_SWIR640
HYSPEX_CAMERA_MODEL_MJOLNIR_V1240 = _HySpexLibrary.HYSPEX_CAMERA_MODEL_MJOLNIR_V1240
HYSPEX_CAMERA_MODEL_MJOLNIR_S620 = _HySpexLibrary.HYSPEX_CAMERA_MODEL_MJOLNIR_S620
HYSPEX_CAMERA_MODEL_BALDUR_V1024N = _HySpexLibrary.HYSPEX_CAMERA_MODEL_BALDUR_V1024N
HYSPEX_CAMERA_MODEL_BALDUR_S384N = _HySpexLibrary.HYSPEX_CAMERA_MODEL_BALDUR_S384N
HYSPEX_CAMERA_MODEL_BALDUR_S640IN = _HySpexLibrary.HYSPEX_CAMERA_MODEL_BALDUR_S640IN
HYSPEX_CAMERA_MODEL_UNKNOWN = _HySpexLibrary.HYSPEX_CAMERA_MODEL_UNKNOWN
HYSPEX_TEMPERATURE_SENSOR = _HySpexLibrary.HYSPEX_TEMPERATURE_SENSOR
HYSPEX_TEMPERATURE_AMBIENT_1 = _HySpexLibrary.HYSPEX_TEMPERATURE_AMBIENT_1
HYSPEX_TEMPERATURE_AMBIENT_2 = _HySpexLibrary.HYSPEX_TEMPERATURE_AMBIENT_2
HYSPEX_AUTOACQUISITION_FOLLOW_DISABLED = _HySpexLibrary.HYSPEX_AUTOACQUISITION_FOLLOW_DISABLED
HYSPEX_AUTOACQUISITION_FOLLOW_ENABLED = _HySpexLibrary.HYSPEX_AUTOACQUISITION_FOLLOW_ENABLED
HYSPEX_AUTOACQUISITION_TOGGLE_DISABLED = _HySpexLibrary.HYSPEX_AUTOACQUISITION_TOGGLE_DISABLED
HYSPEX_AUTOACQUISITION_TOGGLE_ENABLED = _HySpexLibrary.HYSPEX_AUTOACQUISITION_TOGGLE_ENABLED
HYSPEX_COMPUTER_POWER_OFF = _HySpexLibrary.HYSPEX_COMPUTER_POWER_OFF
HYSPEX_COMPUTER_FORCE_POWER_OFF = _HySpexLibrary.HYSPEX_COMPUTER_FORCE_POWER_OFF
HYSPEX_COMPUTER_RESTART = _HySpexLibrary.HYSPEX_COMPUTER_RESTART
HYSPEX_COMPUTER_FORCE_RESTART = _HySpexLibrary.HYSPEX_COMPUTER_FORCE_RESTART
HYSPEX_TRIGGER_VNIR = _HySpexLibrary.HYSPEX_TRIGGER_VNIR
HYSPEX_TRIGGER_SWIR = _HySpexLibrary.HYSPEX_TRIGGER_SWIR
HYSPEX_TRIGGER_CAM3 = _HySpexLibrary.HYSPEX_TRIGGER_CAM3
HYSPEX_TRIGGER_EVENT = _HySpexLibrary.HYSPEX_TRIGGER_EVENT
HYSPEX_DIVISION_OFF = _HySpexLibrary.HYSPEX_DIVISION_OFF
HYSPEX_DIVISION_F1 = _HySpexLibrary.HYSPEX_DIVISION_F1
HYSPEX_DIVISION_F2 = _HySpexLibrary.HYSPEX_DIVISION_F2
HYSPEX_DIVISION_F4 = _HySpexLibrary.HYSPEX_DIVISION_F4
HYSPEX_DIVISION_F8 = _HySpexLibrary.HYSPEX_DIVISION_F8
HYSPEX_DIVISION_F16 = _HySpexLibrary.HYSPEX_DIVISION_F16
HYSPEX_DIVISION_F32 = _HySpexLibrary.HYSPEX_DIVISION_F32
HYSPEX_DIVISION_F64 = _HySpexLibrary.HYSPEX_DIVISION_F64
HYSPEX_DIVISION_F128 = _HySpexLibrary.HYSPEX_DIVISION_F128
HYSPEX_DIVISION_F256 = _HySpexLibrary.HYSPEX_DIVISION_F256
HYSPEX_LED_OFF = _HySpexLibrary.HYSPEX_LED_OFF
HYSPEX_LED_BLUE = _HySpexLibrary.HYSPEX_LED_BLUE
HYSPEX_LED_GREEN = _HySpexLibrary.HYSPEX_LED_GREEN
HYSPEX_LED_CYAN = _HySpexLibrary.HYSPEX_LED_CYAN
HYSPEX_LED_RED = _HySpexLibrary.HYSPEX_LED_RED
HYSPEX_LED_MAGENTA = _HySpexLibrary.HYSPEX_LED_MAGENTA
HYSPEX_LED_YELLOW = _HySpexLibrary.HYSPEX_LED_YELLOW
HYSPEX_LED_WHITE = _HySpexLibrary.HYSPEX_LED_WHITE
class bad_pixel_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    x = property(_HySpexLibrary.bad_pixel_t_x_get, _HySpexLibrary.bad_pixel_t_x_set)
    y = property(_HySpexLibrary.bad_pixel_t_y_get, _HySpexLibrary.bad_pixel_t_y_set)
    x_left = property(_HySpexLibrary.bad_pixel_t_x_left_get, _HySpexLibrary.bad_pixel_t_x_left_set)
    x_right = property(_HySpexLibrary.bad_pixel_t_x_right_get, _HySpexLibrary.bad_pixel_t_x_right_set)
    y_up = property(_HySpexLibrary.bad_pixel_t_y_up_get, _HySpexLibrary.bad_pixel_t_y_up_set)
    y_down = property(_HySpexLibrary.bad_pixel_t_y_down_get, _HySpexLibrary.bad_pixel_t_y_down_set)

    def __init__(self):
        _HySpexLibrary.bad_pixel_t_swiginit(self, _HySpexLibrary.new_bad_pixel_t())
    __swig_destroy__ = _HySpexLibrary.delete_bad_pixel_t

# Register bad_pixel_t in _HySpexLibrary:
_HySpexLibrary.bad_pixel_t_swigregister(bad_pixel_t)

class calibration_parameters_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    pixelsize_x = property(_HySpexLibrary.calibration_parameters_t_pixelsize_x_get, _HySpexLibrary.calibration_parameters_t_pixelsize_x_set)
    pixelsize_y = property(_HySpexLibrary.calibration_parameters_t_pixelsize_y_get, _HySpexLibrary.calibration_parameters_t_pixelsize_y_set)
    aperture_size = property(_HySpexLibrary.calibration_parameters_t_aperture_size_get, _HySpexLibrary.calibration_parameters_t_aperture_size_set)
    SF = property(_HySpexLibrary.calibration_parameters_t_SF_get, _HySpexLibrary.calibration_parameters_t_SF_set)
    dw = property(_HySpexLibrary.calibration_parameters_t_dw_get, _HySpexLibrary.calibration_parameters_t_dw_set)
    max_pixel_value = property(_HySpexLibrary.calibration_parameters_t_max_pixel_value_get, _HySpexLibrary.calibration_parameters_t_max_pixel_value_set)
    bitshift = property(_HySpexLibrary.calibration_parameters_t_bitshift_get, _HySpexLibrary.calibration_parameters_t_bitshift_set)

    def __init__(self):
        _HySpexLibrary.calibration_parameters_t_swiginit(self, _HySpexLibrary.new_calibration_parameters_t())
    __swig_destroy__ = _HySpexLibrary.delete_calibration_parameters_t

# Register calibration_parameters_t in _HySpexLibrary:
_HySpexLibrary.calibration_parameters_t_swigregister(calibration_parameters_t)

class ConstBufferDouble(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_HySpexLibrary.ConstBufferDouble_size_get, _HySpexLibrary.ConstBufferDouble_size_set)
    data = property(_HySpexLibrary.ConstBufferDouble_data_get, _HySpexLibrary.ConstBufferDouble_data_set)

    def __init__(self):
        _HySpexLibrary.ConstBufferDouble_swiginit(self, _HySpexLibrary.new_ConstBufferDouble())
    __swig_destroy__ = _HySpexLibrary.delete_ConstBufferDouble

# Register ConstBufferDouble in _HySpexLibrary:
_HySpexLibrary.ConstBufferDouble_swigregister(ConstBufferDouble)

class ConstBufferFloat(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_HySpexLibrary.ConstBufferFloat_size_get, _HySpexLibrary.ConstBufferFloat_size_set)
    data = property(_HySpexLibrary.ConstBufferFloat_data_get, _HySpexLibrary.ConstBufferFloat_data_set)

    def __init__(self):
        _HySpexLibrary.ConstBufferFloat_swiginit(self, _HySpexLibrary.new_ConstBufferFloat())
    __swig_destroy__ = _HySpexLibrary.delete_ConstBufferFloat

# Register ConstBufferFloat in _HySpexLibrary:
_HySpexLibrary.ConstBufferFloat_swigregister(ConstBufferFloat)

class ConstBufferUnsignedShort(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_HySpexLibrary.ConstBufferUnsignedShort_size_get, _HySpexLibrary.ConstBufferUnsignedShort_size_set)
    data = property(_HySpexLibrary.ConstBufferUnsignedShort_data_get, _HySpexLibrary.ConstBufferUnsignedShort_data_set)

    def __init__(self):
        _HySpexLibrary.ConstBufferUnsignedShort_swiginit(self, _HySpexLibrary.new_ConstBufferUnsignedShort())
    __swig_destroy__ = _HySpexLibrary.delete_ConstBufferUnsignedShort

# Register ConstBufferUnsignedShort in _HySpexLibrary:
_HySpexLibrary.ConstBufferUnsignedShort_swigregister(ConstBufferUnsignedShort)

class ConstBufferInt(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_HySpexLibrary.ConstBufferInt_size_get, _HySpexLibrary.ConstBufferInt_size_set)
    data = property(_HySpexLibrary.ConstBufferInt_data_get, _HySpexLibrary.ConstBufferInt_data_set)

    def __init__(self):
        _HySpexLibrary.ConstBufferInt_swiginit(self, _HySpexLibrary.new_ConstBufferInt())
    __swig_destroy__ = _HySpexLibrary.delete_ConstBufferInt

# Register ConstBufferInt in _HySpexLibrary:
_HySpexLibrary.ConstBufferInt_swigregister(ConstBufferInt)

class ConstBufferBadPixel(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_HySpexLibrary.ConstBufferBadPixel_size_get, _HySpexLibrary.ConstBufferBadPixel_size_set)
    data = property(_HySpexLibrary.ConstBufferBadPixel_data_get, _HySpexLibrary.ConstBufferBadPixel_data_set)

    def __init__(self):
        _HySpexLibrary.ConstBufferBadPixel_swiginit(self, _HySpexLibrary.new_ConstBufferBadPixel())
    __swig_destroy__ = _HySpexLibrary.delete_ConstBufferBadPixel

# Register ConstBufferBadPixel in _HySpexLibrary:
_HySpexLibrary.ConstBufferBadPixel_swigregister(ConstBufferBadPixel)

class ImageLineUnsignedShort(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    buffer = property(_HySpexLibrary.ImageLineUnsignedShort_buffer_get, _HySpexLibrary.ImageLineUnsignedShort_buffer_set)
    saturated = property(_HySpexLibrary.ImageLineUnsignedShort_saturated_get, _HySpexLibrary.ImageLineUnsignedShort_saturated_set)
    max_saturation = property(_HySpexLibrary.ImageLineUnsignedShort_max_saturation_get, _HySpexLibrary.ImageLineUnsignedShort_max_saturation_set)
    stat = property(_HySpexLibrary.ImageLineUnsignedShort_stat_get, _HySpexLibrary.ImageLineUnsignedShort_stat_set)
    stage = property(_HySpexLibrary.ImageLineUnsignedShort_stage_get, _HySpexLibrary.ImageLineUnsignedShort_stage_set)
    timestamp_ns = property(_HySpexLibrary.ImageLineUnsignedShort_timestamp_ns_get, _HySpexLibrary.ImageLineUnsignedShort_timestamp_ns_set)
    timestamp_host_ns = property(_HySpexLibrary.ImageLineUnsignedShort_timestamp_host_ns_get, _HySpexLibrary.ImageLineUnsignedShort_timestamp_host_ns_set)
    spectral_size = property(_HySpexLibrary.ImageLineUnsignedShort_spectral_size_get, _HySpexLibrary.ImageLineUnsignedShort_spectral_size_set)
    spatial_size = property(_HySpexLibrary.ImageLineUnsignedShort_spatial_size_get, _HySpexLibrary.ImageLineUnsignedShort_spatial_size_set)
    missed_triggers = property(_HySpexLibrary.ImageLineUnsignedShort_missed_triggers_get, _HySpexLibrary.ImageLineUnsignedShort_missed_triggers_set)
    aborted_write = property(_HySpexLibrary.ImageLineUnsignedShort_aborted_write_get, _HySpexLibrary.ImageLineUnsignedShort_aborted_write_set)

    def getBuffer(self):
        return _HySpexLibrary.ImageLineUnsignedShort_getBuffer(self)

    def getSaturated(self):
        return _HySpexLibrary.ImageLineUnsignedShort_getSaturated(self)

    buffer = property(getBuffer)
    saturated = property(getSaturated)


    def __init__(self):
        _HySpexLibrary.ImageLineUnsignedShort_swiginit(self, _HySpexLibrary.new_ImageLineUnsignedShort())
    __swig_destroy__ = _HySpexLibrary.delete_ImageLineUnsignedShort

# Register ImageLineUnsignedShort in _HySpexLibrary:
_HySpexLibrary.ImageLineUnsignedShort_swigregister(ImageLineUnsignedShort)

class stat_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    frame_number = property(_HySpexLibrary.stat_t_frame_number_get, _HySpexLibrary.stat_t_frame_number_set)
    read_lost_frames = property(_HySpexLibrary.stat_t_read_lost_frames_get, _HySpexLibrary.stat_t_read_lost_frames_set)
    behind_frames = property(_HySpexLibrary.stat_t_behind_frames_get, _HySpexLibrary.stat_t_behind_frames_set)
    processing_time_spent_us = property(_HySpexLibrary.stat_t_processing_time_spent_us_get, _HySpexLibrary.stat_t_processing_time_spent_us_set)

    def __init__(self):
        _HySpexLibrary.stat_t_swiginit(self, _HySpexLibrary.new_stat_t())
    __swig_destroy__ = _HySpexLibrary.delete_stat_t

# Register stat_t in _HySpexLibrary:
_HySpexLibrary.stat_t_swigregister(stat_t)

class stage_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    valid = property(_HySpexLibrary.stage_t_valid_get, _HySpexLibrary.stage_t_valid_set)
    moving = property(_HySpexLibrary.stage_t_moving_get, _HySpexLibrary.stage_t_moving_set)
    target_speed_reached = property(_HySpexLibrary.stage_t_target_speed_reached_get, _HySpexLibrary.stage_t_target_speed_reached_set)

    def __init__(self):
        _HySpexLibrary.stage_t_swiginit(self, _HySpexLibrary.new_stage_t())
    __swig_destroy__ = _HySpexLibrary.delete_stage_t

# Register stage_t in _HySpexLibrary:
_HySpexLibrary.stage_t_swigregister(stage_t)


def internal_debug_serial(a_id, a_camera, a_input):
    return _HySpexLibrary.internal_debug_serial(a_id, a_camera, a_input)
class ImageCallback(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        if self.__class__ == ImageCallback:
            _self = None
        else:
            _self = self
        _HySpexLibrary.ImageCallback_swiginit(self, _HySpexLibrary.new_ImageCallback(_self, *args))

    def handle(self, a_options, a_image):
        return _HySpexLibrary.ImageCallback_handle(self, a_options, a_image)
    __swig_destroy__ = _HySpexLibrary.delete_ImageCallback

    def setCamera(self, a_camera, a_options):
        return _HySpexLibrary.ImageCallback_setCamera(self, a_camera, a_options)
    def __disown__(self):
        self.this.disown()
        _HySpexLibrary.disown_ImageCallback(self)
        return weakref.proxy(self)

# Register ImageCallback in _HySpexLibrary:
_HySpexLibrary.ImageCallback_swigregister(ImageCallback)

class NotificationCallback(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        if self.__class__ == NotificationCallback:
            _self = None
        else:
            _self = self
        _HySpexLibrary.NotificationCallback_swiginit(self, _HySpexLibrary.new_NotificationCallback(_self, *args))

    def handle(self, a_event, a_status):
        return _HySpexLibrary.NotificationCallback_handle(self, a_event, a_status)
    __swig_destroy__ = _HySpexLibrary.delete_NotificationCallback

    def setCamera(self, a_camera):
        return _HySpexLibrary.NotificationCallback_setCamera(self, a_camera)
    def __disown__(self):
        self.this.disown()
        _HySpexLibrary.disown_NotificationCallback(self)
        return weakref.proxy(self)

# Register NotificationCallback in _HySpexLibrary:
_HySpexLibrary.NotificationCallback_swigregister(NotificationCallback)

class LoggerCallback(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        if self.__class__ == LoggerCallback:
            _self = None
        else:
            _self = self
        _HySpexLibrary.LoggerCallback_swiginit(self, _HySpexLibrary.new_LoggerCallback(_self, ))

    def handle(self, a_secondsSinceEpoch, a_milliseconds, a_type, a_message):
        return _HySpexLibrary.LoggerCallback_handle(self, a_secondsSinceEpoch, a_milliseconds, a_type, a_message)
    __swig_destroy__ = _HySpexLibrary.delete_LoggerCallback
    def __disown__(self):
        self.this.disown()
        _HySpexLibrary.disown_LoggerCallback(self)
        return weakref.proxy(self)

# Register LoggerCallback in _HySpexLibrary:
_HySpexLibrary.LoggerCallback_swigregister(LoggerCallback)

class Camera(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _HySpexLibrary.delete_Camera

    def __lt__(self, a_rhs):
        return _HySpexLibrary.Camera___lt__(self, a_rhs)

    def __eq__(self, a_rhs):
        return _HySpexLibrary.Camera___eq__(self, a_rhs)

    def resetFramegrabber(self):
        return _HySpexLibrary.Camera_resetFramegrabber(self)

    def readyForInit(self):
        return _HySpexLibrary.Camera_readyForInit(self)

    def init(self, a_numBuffersRaw=1024, a_numBuffersPreProcessing=128):
        return _HySpexLibrary.Camera_init(self, a_numBuffersRaw, a_numBuffersPreProcessing)

    def setFramePeriod(self, a_periodUs):
        return _HySpexLibrary.Camera_setFramePeriod(self, a_periodUs)

    def setIntegrationTime(self, a_integrationTimeUs):
        return _HySpexLibrary.Camera_setIntegrationTime(self, a_integrationTimeUs)

    def setUseExternalTrigger(self, a_external):
        return _HySpexLibrary.Camera_setUseExternalTrigger(self, a_external)

    def getUseExternalTrigger(self):
        return _HySpexLibrary.Camera_getUseExternalTrigger(self)

    def setDisableGroundMode(self, a_disable):
        return _HySpexLibrary.Camera_setDisableGroundMode(self, a_disable)

    def getWavelengthRangeId(self):
        return _HySpexLibrary.Camera_getWavelengthRangeId(self)

    def getModelId(self):
        return _HySpexLibrary.Camera_getModelId(self)

    def initAcquisition(self):
        return _HySpexLibrary.Camera_initAcquisition(self)

    def preAcquisition(self):
        return _HySpexLibrary.Camera_preAcquisition(self)

    def waitForPreAcquisitionComplete(self, a_timeoutMs=0):
        return _HySpexLibrary.Camera_waitForPreAcquisitionComplete(self, a_timeoutMs)

    def startAcquisition(self, a_timeoutMs=0):
        return _HySpexLibrary.Camera_startAcquisition(self, a_timeoutMs)

    def startAcquisitionNoWait(self):
        return _HySpexLibrary.Camera_startAcquisitionNoWait(self)

    def stopAcquisition(self):
        return _HySpexLibrary.Camera_stopAcquisition(self)

    def setMovingAverageBackgroundCalculationMaxBins(self, a_maxNumberOfBins):
        return _HySpexLibrary.Camera_setMovingAverageBackgroundCalculationMaxBins(self, a_maxNumberOfBins)

    def getMovingAverageBackgroundCalculationMaxBins(self):
        return _HySpexLibrary.Camera_getMovingAverageBackgroundCalculationMaxBins(self)

    def startMovingAverageBackgroundCalculation(self):
        return _HySpexLibrary.Camera_startMovingAverageBackgroundCalculation(self)

    def stopMovingAverageBackgroundCalculation(self, *args):
        return _HySpexLibrary.Camera_stopMovingAverageBackgroundCalculation(self, *args)

    def updateMovingAverageBackgroundCalculation(self, a_timeoutMs=0):
        return _HySpexLibrary.Camera_updateMovingAverageBackgroundCalculation(self, a_timeoutMs)

    def getMovingAverageBackgroundStatistics(self):
        return _HySpexLibrary.Camera_getMovingAverageBackgroundStatistics(self)

    def startCalculatingBackground(self):
        return _HySpexLibrary.Camera_startCalculatingBackground(self)

    def startContinuousBackgroundCalculation(self, a_numberOfBackgrounds=0):
        return _HySpexLibrary.Camera_startContinuousBackgroundCalculation(self, a_numberOfBackgrounds)

    def stopCalculatingBackground(self, *args):
        return _HySpexLibrary.Camera_stopCalculatingBackground(self, *args)

    def calculateBackground(self, a_timeoutMs=0, a_numberOfBackgrounds=0):
        return _HySpexLibrary.Camera_calculateBackground(self, a_timeoutMs, a_numberOfBackgrounds)

    def calculateBackgroundAsync(self, a_timeoutMs=0, a_numberOfBackgrounds=0):
        return _HySpexLibrary.Camera_calculateBackgroundAsync(self, a_timeoutMs, a_numberOfBackgrounds)

    def waitForCalculateBackgroundAsync(self):
        return _HySpexLibrary.Camera_waitForCalculateBackgroundAsync(self)

    def openShutter(self):
        return _HySpexLibrary.Camera_openShutter(self)

    def closeShutter(self):
        return _HySpexLibrary.Camera_closeShutter(self)

    def setAverageFrames(self, a_averageFrames):
        return _HySpexLibrary.Camera_setAverageFrames(self, a_averageFrames)

    def getAverageFrames(self):
        return _HySpexLibrary.Camera_getAverageFrames(self)

    def setNumberOfBackgrounds(self, a_numberOfBackgrounds):
        return _HySpexLibrary.Camera_setNumberOfBackgrounds(self, a_numberOfBackgrounds)

    def getNumberOfBackgrounds(self):
        return _HySpexLibrary.Camera_getNumberOfBackgrounds(self)

    def setBackgroundSkipFrames(self, a_backgrounds):
        return _HySpexLibrary.Camera_setBackgroundSkipFrames(self, a_backgrounds)

    def getBackgroundSkipFrames(self):
        return _HySpexLibrary.Camera_getBackgroundSkipFrames(self)

    def setIncludeStageMetadata(self, a_stage):
        return _HySpexLibrary.Camera_setIncludeStageMetadata(self, a_stage)

    def setEventOutputEnabled(self, a_enabled):
        return _HySpexLibrary.Camera_setEventOutputEnabled(self, a_enabled)

    def getEventOutputEnabled(self):
        return _HySpexLibrary.Camera_getEventOutputEnabled(self)

    def getEventOutputDivisionFactor(self):
        return _HySpexLibrary.Camera_getEventOutputDivisionFactor(self)

    def getSpatialROISupport(self):
        return _HySpexLibrary.Camera_getSpatialROISupport(self)

    def setSpatialROI(self, a_spatialStart, a_spatialSize):
        return _HySpexLibrary.Camera_setSpatialROI(self, a_spatialStart, a_spatialSize)

    def getPendingSpatialROI(self):
        return _HySpexLibrary.Camera_getPendingSpatialROI(self)

    def getSpatialROI(self):
        return _HySpexLibrary.Camera_getSpatialROI(self)

    def resetSpatialROI(self):
        return _HySpexLibrary.Camera_resetSpatialROI(self)

    def getSpectralROISupport(self):
        return _HySpexLibrary.Camera_getSpectralROISupport(self)

    def setSpectralROI(self, a_activeBands):
        return _HySpexLibrary.Camera_setSpectralROI(self, a_activeBands)

    def getPendingSpectralROI(self):
        return _HySpexLibrary.Camera_getPendingSpectralROI(self)

    def getSpectralROI(self):
        return _HySpexLibrary.Camera_getSpectralROI(self)

    def resetSpectralROI(self):
        return _HySpexLibrary.Camera_resetSpectralROI(self)

    def updateROI(self):
        return _HySpexLibrary.Camera_updateROI(self)

    def getROIEnabled(self):
        return _HySpexLibrary.Camera_getROIEnabled(self)

    def setSpatialBinning(self, a_spatialBinning):
        return _HySpexLibrary.Camera_setSpatialBinning(self, a_spatialBinning)

    def setSpectralBinning(self, a_spectralBinning):
        return _HySpexLibrary.Camera_setSpectralBinning(self, a_spectralBinning)

    def getSpatialBinning(self):
        return _HySpexLibrary.Camera_getSpatialBinning(self)

    def getSpectralBinning(self):
        return _HySpexLibrary.Camera_getSpectralBinning(self)

    def getBinningSupported(self):
        return _HySpexLibrary.Camera_getBinningSupported(self)

    def setFlippingEnabled(self, a_enabled):
        return _HySpexLibrary.Camera_setFlippingEnabled(self, a_enabled)

    def getFlippingEnabled(self):
        return _HySpexLibrary.Camera_getFlippingEnabled(self)

    def startHighSNRMode(self):
        return _HySpexLibrary.Camera_startHighSNRMode(self)

    def grabHighSNRImage(self, a_averageFrames):
        return _HySpexLibrary.Camera_grabHighSNRImage(self, a_averageFrames)

    def waitForHighSNRImageComplete(self, a_timeoutMs=0):
        return _HySpexLibrary.Camera_waitForHighSNRImageComplete(self, a_timeoutMs)

    def stopHighSNRMode(self):
        return _HySpexLibrary.Camera_stopHighSNRMode(self)

    def getAcquisitionStatus(self):
        return _HySpexLibrary.Camera_getAcquisitionStatus(self)

    def getBackgroundStatus(self, *args):
        return _HySpexLibrary.Camera_getBackgroundStatus(self, *args)

    def getInitStatus(self):
        return _HySpexLibrary.Camera_getInitStatus(self)

    def getShutterStatus(self):
        return _HySpexLibrary.Camera_getShutterStatus(self)

    def getCommunicationStatus(self):
        return _HySpexLibrary.Camera_getCommunicationStatus(self)

    def getCoolingStatus(self):
        return _HySpexLibrary.Camera_getCoolingStatus(self)

    def isShutterOpen(self):
        return _HySpexLibrary.Camera_isShutterOpen(self)

    def detected(self, *args):
        return _HySpexLibrary.Camera_detected(self, *args)

    def getFramePeriod(self):
        return _HySpexLibrary.Camera_getFramePeriod(self)

    def getMinimumFramePeriod(self):
        return _HySpexLibrary.Camera_getMinimumFramePeriod(self)

    def getMaxIntegrationTime(self, a_framePeriodUs):
        return _HySpexLibrary.Camera_getMaxIntegrationTime(self, a_framePeriodUs)

    def getValidIntegrationTimeRanges(self, a_framePeriodUs):
        return _HySpexLibrary.Camera_getValidIntegrationTimeRanges(self, a_framePeriodUs)

    def getIntegrationTime(self):
        return _HySpexLibrary.Camera_getIntegrationTime(self)

    def getDigitalCutOff(self):
        return _HySpexLibrary.Camera_getDigitalCutOff(self)

    def getAmbientTemperature(self):
        return _HySpexLibrary.Camera_getAmbientTemperature(self)

    def getSensorTemperature(self):
        return _HySpexLibrary.Camera_getSensorTemperature(self)

    def getTemperature(self, a_probe):
        return _HySpexLibrary.Camera_getTemperature(self, a_probe)

    def getResamplingEnabled(self):
        return _HySpexLibrary.Camera_getResamplingEnabled(self)

    def getBatteryVoltage(self):
        return _HySpexLibrary.Camera_getBatteryVoltage(self)

    def setApxState(self, a_on):
        return _HySpexLibrary.Camera_setApxState(self, a_on)

    def getApxState(self):
        return _HySpexLibrary.Camera_getApxState(self)

    def setStatusIndicatorLed(self, a_ledStatus):
        return _HySpexLibrary.Camera_setStatusIndicatorLed(self, a_ledStatus)

    def getStatusIndicatorLed(self, a_ledStatus):
        return _HySpexLibrary.Camera_getStatusIndicatorLed(self, a_ledStatus)

    def setAutoAcquisitionMode(self, a_mode):
        return _HySpexLibrary.Camera_setAutoAcquisitionMode(self, a_mode)

    def getAutoAcquisitionMode(self, a_mode):
        return _HySpexLibrary.Camera_getAutoAcquisitionMode(self, a_mode)

    def getAutoAcquisitionState(self):
        return _HySpexLibrary.Camera_getAutoAcquisitionState(self)

    def setTriggerOutput(self, a_trigger, a_factor):
        return _HySpexLibrary.Camera_setTriggerOutput(self, a_trigger, a_factor)

    def getTriggerOutput(self, a_trigger, a_factor):
        return _HySpexLibrary.Camera_getTriggerOutput(self, a_trigger, a_factor)

    def shutdownComputer(self, a_command):
        return _HySpexLibrary.Camera_shutdownComputer(self, a_command)

    def getFirmwareVersion(self):
        return _HySpexLibrary.Camera_getFirmwareVersion(self)

    def getHardwareRevision(self):
        return _HySpexLibrary.Camera_getHardwareRevision(self)

    def useLensId(self, a_lensID):
        return _HySpexLibrary.Camera_useLensId(self, a_lensID)

    def getLensCount(self):
        return _HySpexLibrary.Camera_getLensCount(self)

    def getLensId(self):
        return _HySpexLibrary.Camera_getLensId(self)

    def getLensSettingMismatchCount(self):
        return _HySpexLibrary.Camera_getLensSettingMismatchCount(self)

    def getLensSettingMismatchByIndex(self, a_index):
        return _HySpexLibrary.Camera_getLensSettingMismatchByIndex(self, a_index)

    def getLensNameFromId(self, a_lensId):
        return _HySpexLibrary.Camera_getLensNameFromId(self, a_lensId)

    def getLensName(self):
        return _HySpexLibrary.Camera_getLensName(self)

    def getLensWorkingDistance(self, *args):
        return _HySpexLibrary.Camera_getLensWorkingDistance(self, *args)

    def getLensFieldOfView(self, *args):
        return _HySpexLibrary.Camera_getLensFieldOfView(self, *args)

    def getLensIsFieldOfViewExpander(self, *args):
        return _HySpexLibrary.Camera_getLensIsFieldOfViewExpander(self, *args)

    def getLensHasEqualizationFilter(self, *args):
        return _HySpexLibrary.Camera_getLensHasEqualizationFilter(self, *args)

    def getLensSettingErrorCount(self):
        return _HySpexLibrary.Camera_getLensSettingErrorCount(self)

    def getLensSettingErrorByIndex(self, a_index):
        return _HySpexLibrary.Camera_getLensSettingErrorByIndex(self, a_index)

    def getLensInternalNumber(self, *args):
        return _HySpexLibrary.Camera_getLensInternalNumber(self, *args)

    def getId(self):
        return _HySpexLibrary.Camera_getId(self)

    def getSettingsFilePath(self):
        return _HySpexLibrary.Camera_getSettingsFilePath(self)

    def getGainMode(self, *args):
        return _HySpexLibrary.Camera_getGainMode(self, *args)

    def getSpectralSize(self):
        return _HySpexLibrary.Camera_getSpectralSize(self)

    def getSpatialSize(self):
        return _HySpexLibrary.Camera_getSpatialSize(self)

    def getMaxSpatialSize(self):
        return _HySpexLibrary.Camera_getMaxSpatialSize(self)

    def getMaxSpectralSize(self):
        return _HySpexLibrary.Camera_getMaxSpectralSize(self)

    def getMaxPixelValue(self):
        return _HySpexLibrary.Camera_getMaxPixelValue(self)

    def getSerialNumber(self):
        return _HySpexLibrary.Camera_getSerialNumber(self)

    def getParameterUnsignedInt(self, a_key):
        return _HySpexLibrary.Camera_getParameterUnsignedInt(self, a_key)

    def getParameterString(self, a_key):
        return _HySpexLibrary.Camera_getParameterString(self, a_key)

    def getParameterBool(self, a_key):
        return _HySpexLibrary.Camera_getParameterBool(self, a_key)

    def getParameterDouble(self, a_key):
        return _HySpexLibrary.Camera_getParameterDouble(self, a_key)

    def getBadPixels(self):
        return _HySpexLibrary.Camera_getBadPixels(self)

    def getBadPixelsWithCalculatedCorrections(self):
        return _HySpexLibrary.Camera_getBadPixelsWithCalculatedCorrections(self)

    def getBadPixelsMatrix(self):
        return _HySpexLibrary.Camera_getBadPixelsMatrix(self)

    def getREMatrix(self):
        return _HySpexLibrary.Camera_getREMatrix(self)

    def getCalibrationMatrix(self, a_matrix):
        return _HySpexLibrary.Camera_getCalibrationMatrix(self, a_matrix)

    def getCalibrationMatrixAvailable(self, a_matrix):
        return _HySpexLibrary.Camera_getCalibrationMatrixAvailable(self, a_matrix)

    def getCalibrationParameters(self):
        return _HySpexLibrary.Camera_getCalibrationParameters(self)

    def getResampledSpatialSize(self):
        return _HySpexLibrary.Camera_getResampledSpatialSize(self)

    def getResampledSpectralSize(self):
        return _HySpexLibrary.Camera_getResampledSpectralSize(self)

    def getNextImage(self, *args):
        return _HySpexLibrary.Camera_getNextImage(self, *args)

    def getNextImageCritical(self, *args):
        return _HySpexLibrary.Camera_getNextImageCritical(self, *args)

    def applyMatrixCorrections(self, *args):
        return _HySpexLibrary.Camera_applyMatrixCorrections(self, *args)

    def releaseImage(self):
        return _HySpexLibrary.Camera_releaseImage(self)

    def getBackgroundMatrix(self):
        return _HySpexLibrary.Camera_getBackgroundMatrix(self)

    def setBackgroundMatrixAgeLimit(self, a_ageLimitMs):
        return _HySpexLibrary.Camera_setBackgroundMatrixAgeLimit(self, a_ageLimitMs)

    def getBackgroundMatrixAgeLimit(self):
        return _HySpexLibrary.Camera_getBackgroundMatrixAgeLimit(self)

    def getBackgroundMatrixAge(self):
        return _HySpexLibrary.Camera_getBackgroundMatrixAge(self)

    def monitorBackgroundMatrixAge(self, a_enable):
        return _HySpexLibrary.Camera_monitorBackgroundMatrixAge(self, a_enable)

    def getBackgroundStdDeviationMatrix(self):
        return _HySpexLibrary.Camera_getBackgroundStdDeviationMatrix(self)

    def getBackgroundAverageDN(self):
        return _HySpexLibrary.Camera_getBackgroundAverageDN(self)

    def getBackgroundAverageDNSpatial(self):
        return _HySpexLibrary.Camera_getBackgroundAverageDNSpatial(self)

    def setSaturationBands(self, a_startBand, a_endBand):
        return _HySpexLibrary.Camera_setSaturationBands(self, a_startBand, a_endBand)

    def getUseManualShutter(self):
        return _HySpexLibrary.Camera_getUseManualShutter(self)

    def setManualShutterResponseRequired(self, a_required):
        return _HySpexLibrary.Camera_setManualShutterResponseRequired(self, a_required)

    def setManualShutterStateOpen(self, a_open):
        return _HySpexLibrary.Camera_setManualShutterStateOpen(self, a_open)

    def setUseLegacyFrequencyDivider(self, *args):
        return _HySpexLibrary.Camera_setUseLegacyFrequencyDivider(self, *args)

    def getUseLegacyFrequencyDivider(self):
        return _HySpexLibrary.Camera_getUseLegacyFrequencyDivider(self)

    def useExternalTrigger(self):
        return _HySpexLibrary.Camera_useExternalTrigger(self)

    def getQEMatrix(self):
        return _HySpexLibrary.Camera_getQEMatrix(self)

    def getSpectralCalibrationMatrix(self):
        return _HySpexLibrary.Camera_getSpectralCalibrationMatrix(self)

    def getFullSpectralCalibrationMatrix(self):
        return _HySpexLibrary.Camera_getFullSpectralCalibrationMatrix(self)

    def getSpectralDeltaMatrix(self):
        return _HySpexLibrary.Camera_getSpectralDeltaMatrix(self)

    def getSpectralCalibrationPerBand(self):
        return _HySpexLibrary.Camera_getSpectralCalibrationPerBand(self)

    def getFullSpectralCalibrationPerBand(self):
        return _HySpexLibrary.Camera_getFullSpectralCalibrationPerBand(self)

    def getSpectralDeltaPerBand(self):
        return _HySpexLibrary.Camera_getSpectralDeltaPerBand(self)

    def getSpectralCalibrationPerPixel(self):
        return _HySpexLibrary.Camera_getSpectralCalibrationPerPixel(self)

    def getFullSpectralCalibrationPerPixel(self):
        return _HySpexLibrary.Camera_getFullSpectralCalibrationPerPixel(self)

    def getSpectralDeltaPerPixel(self):
        return _HySpexLibrary.Camera_getSpectralDeltaPerPixel(self)

    def getTemperatureCompensationModel(self):
        return _HySpexLibrary.Camera_getTemperatureCompensationModel(self)

# Register Camera in _HySpexLibrary:
_HySpexLibrary.Camera_swigregister(Camera)

class CameraManager(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _HySpexLibrary.CameraManager_swiginit(self, _HySpexLibrary.new_CameraManager(*args))
    __swig_destroy__ = _HySpexLibrary.delete_CameraManager

    def setRecommendedProcessPriorities(self, a_setHighPriorityClass=True, a_disablePowerThrottling=True):
        return _HySpexLibrary.CameraManager_setRecommendedProcessPriorities(self, a_setHighPriorityClass, a_disablePowerThrottling)

    def readSettingsFromPath(self, a_path):
        return _HySpexLibrary.CameraManager_readSettingsFromPath(self, a_path)

    def detectCameras(self, *args):
        return _HySpexLibrary.CameraManager_detectCameras(self, *args)

    def getExpectedCount(self):
        return _HySpexLibrary.CameraManager_getExpectedCount(self)

    def getCount(self):
        return _HySpexLibrary.CameraManager_getCount(self)

    def getCameraByIndex(self, a_index):
        return _HySpexLibrary.CameraManager_getCameraByIndex(self, a_index)

    @staticmethod
    def getLibraryVersion():
        return _HySpexLibrary.CameraManager_getLibraryVersion()

# Register CameraManager in _HySpexLibrary:
_HySpexLibrary.CameraManager_swigregister(CameraManager)

def CameraManager_getLibraryVersion():
    return _HySpexLibrary.CameraManager_getLibraryVersion()

class FileReader(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _HySpexLibrary.FileReader_swiginit(self, _HySpexLibrary.new_FileReader())
    __swig_destroy__ = _HySpexLibrary.delete_FileReader

    def open(self, a_fileName):
        return _HySpexLibrary.FileReader_open(self, a_fileName)

    def close(self):
        return _HySpexLibrary.FileReader_close(self)

    def getPropertyKeyCount(self):
        return _HySpexLibrary.FileReader_getPropertyKeyCount(self)

    def getPropertyKeyNameByIndex(self, a_index):
        return _HySpexLibrary.FileReader_getPropertyKeyNameByIndex(self, a_index)

    def getPropertyValue(self, a_key):
        return _HySpexLibrary.FileReader_getPropertyValue(self, a_key)

    def getDoubleMatrixCount(self):
        return _HySpexLibrary.FileReader_getDoubleMatrixCount(self)

    def getDoubleMatrixKeyNameByIndex(self, a_index):
        return _HySpexLibrary.FileReader_getDoubleMatrixKeyNameByIndex(self, a_index)

    def getIntMatrixCount(self):
        return _HySpexLibrary.FileReader_getIntMatrixCount(self)

    def getIntMatrixKeyNameByIndex(self, a_index):
        return _HySpexLibrary.FileReader_getIntMatrixKeyNameByIndex(self, a_index)

    def getIntMatrix(self, a_key):
        return _HySpexLibrary.FileReader_getIntMatrix(self, a_key)

    def getDoubleMatrix(self, a_key):
        return _HySpexLibrary.FileReader_getDoubleMatrix(self, a_key)

    def getImageCount(self):
        return _HySpexLibrary.FileReader_getImageCount(self)

    def getImage(self, a_index):
        return _HySpexLibrary.FileReader_getImage(self, a_index)

    def getFloatImage(self, a_index):
        return _HySpexLibrary.FileReader_getFloatImage(self, a_index)

    def getImageOffsetInBytes(self):
        return _HySpexLibrary.FileReader_getImageOffsetInBytes(self)

    def getRawBinaryHeader(self):
        return _HySpexLibrary.FileReader_getRawBinaryHeader(self)

# Register FileReader in _HySpexLibrary:
_HySpexLibrary.FileReader_swigregister(FileReader)

class Logger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    HYSPEX_LOGTYPE_INFO = _HySpexLibrary.Logger_HYSPEX_LOGTYPE_INFO
    HYSPEX_LOGTYPE_DEBUG = _HySpexLibrary.Logger_HYSPEX_LOGTYPE_DEBUG
    HYSPEX_LOGTYPE_ERROR = _HySpexLibrary.Logger_HYSPEX_LOGTYPE_ERROR
    HYSPEX_LOGTYPE_WARN = _HySpexLibrary.Logger_HYSPEX_LOGTYPE_WARN
    HYSPEX_LOGTYPE_PERF = _HySpexLibrary.Logger_HYSPEX_LOGTYPE_PERF

    @staticmethod
    def createInstance(*args):
        return _HySpexLibrary.Logger_createInstance(*args)

    @staticmethod
    def isCreated():
        return _HySpexLibrary.Logger_isCreated()

    @staticmethod
    def getInstance():
        return _HySpexLibrary.Logger_getInstance()

    def addTimestampedMessage(self, a_logType, a_message):
        return _HySpexLibrary.Logger_addTimestampedMessage(self, a_logType, a_message)

    def openLogFile(self, *args):
        return _HySpexLibrary.Logger_openLogFile(self, *args)

    def closeLogFile(self):
        return _HySpexLibrary.Logger_closeLogFile(self)

# Register Logger in _HySpexLibrary:
_HySpexLibrary.Logger_swigregister(Logger)

def Logger_createInstance(*args):
    return _HySpexLibrary.Logger_createInstance(*args)

def Logger_isCreated():
    return _HySpexLibrary.Logger_isCreated()

def Logger_getInstance():
    return _HySpexLibrary.Logger_getInstance()

class Recorder(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _HySpexLibrary.Recorder_swiginit(self, _HySpexLibrary.new_Recorder(*args))
    __swig_destroy__ = _HySpexLibrary.delete_Recorder

    def setCamera(self, a_camera):
        return _HySpexLibrary.Recorder_setCamera(self, a_camera)

    def setWaitForStageTargetSpeedReached(self, a_enabled):
        return _HySpexLibrary.Recorder_setWaitForStageTargetSpeedReached(self, a_enabled)

    def setStopStageWhenComplete(self, a_stage):
        return _HySpexLibrary.Recorder_setStopStageWhenComplete(self, a_stage)

    def setDestinationPath(self, a_destination):
        return _HySpexLibrary.Recorder_setDestinationPath(self, a_destination)

    def setAutoStopAfterFrames(self, a_frames):
        return _HySpexLibrary.Recorder_setAutoStopAfterFrames(self, a_frames)

    def setSkipFirstFrames(self, a_frames):
        return _HySpexLibrary.Recorder_setSkipFirstFrames(self, a_frames)

    def setTestScan(self, a_enable):
        return _HySpexLibrary.Recorder_setTestScan(self, a_enable)

    def setWriteSaturationMatrix(self, a_enable):
        return _HySpexLibrary.Recorder_setWriteSaturationMatrix(self, a_enable)

    def setCalculateBackgroundAtEnd(self, *args):
        return _HySpexLibrary.Recorder_setCalculateBackgroundAtEnd(self, *args)

    def setBlockBackgroundAtEnd(self, a_enable):
        return _HySpexLibrary.Recorder_setBlockBackgroundAtEnd(self, a_enable)

    def setImageOptions(self, a_options):
        return _HySpexLibrary.Recorder_setImageOptions(self, a_options)

    def setComment(self, a_comment):
        return _HySpexLibrary.Recorder_setComment(self, a_comment)

    def start(self):
        return _HySpexLibrary.Recorder_start(self)

    def stop(self):
        return _HySpexLibrary.Recorder_stop(self)

    def getStatus(self):
        return _HySpexLibrary.Recorder_getStatus(self)

    def getFramesWritten(self):
        return _HySpexLibrary.Recorder_getFramesWritten(self)

    def getCurrentTimestampHost(self):
        return _HySpexLibrary.Recorder_getCurrentTimestampHost(self)

    def getFirstTimestampHost(self):
        return _HySpexLibrary.Recorder_getFirstTimestampHost(self)

# Register Recorder in _HySpexLibrary:
_HySpexLibrary.Recorder_swigregister(Recorder)

class Stage(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _HySpexLibrary.delete_Stage

    def setSpeed(self, a_unitsPerSecond):
        return _HySpexLibrary.Stage_setSpeed(self, a_unitsPerSecond)

    def getSpeed(self):
        return _HySpexLibrary.Stage_getSpeed(self)

    def getAcceleration(self):
        return _HySpexLibrary.Stage_getAcceleration(self)

    def getDeceleration(self):
        return _HySpexLibrary.Stage_getDeceleration(self)

    def getMaxSpeed(self):
        return _HySpexLibrary.Stage_getMaxSpeed(self)

    def getAbsoluteMax(self):
        return _HySpexLibrary.Stage_getAbsoluteMax(self)

    def getAbsoluteMin(self):
        return _HySpexLibrary.Stage_getAbsoluteMin(self)

    def getRecommendedMovementSpeed(self):
        return _HySpexLibrary.Stage_getRecommendedMovementSpeed(self)

    def moveRelative(self, a_units):
        return _HySpexLibrary.Stage_moveRelative(self, a_units)

    def moveAbsolute(self, a_units):
        return _HySpexLibrary.Stage_moveAbsolute(self, a_units)

    def moveHome(self):
        return _HySpexLibrary.Stage_moveHome(self)

    def moveLeft(self):
        return _HySpexLibrary.Stage_moveLeft(self)

    def moveRight(self):
        return _HySpexLibrary.Stage_moveRight(self)

    def setCurrentAs(self, a_units):
        return _HySpexLibrary.Stage_setCurrentAs(self, a_units)

    def setCurrentAsZero(self):
        return _HySpexLibrary.Stage_setCurrentAsZero(self)

    def getPosition(self):
        return _HySpexLibrary.Stage_getPosition(self)

    def getEncoderPosition(self):
        return _HySpexLibrary.Stage_getEncoderPosition(self)

    def getRawEncoderPosition(self, a_steps):
        return _HySpexLibrary.Stage_getRawEncoderPosition(self, a_steps)

    def stop(self):
        return _HySpexLibrary.Stage_stop(self)

    def isMoving(self):
        return _HySpexLibrary.Stage_isMoving(self)

    def getMoveStatus(self):
        return _HySpexLibrary.Stage_getMoveStatus(self)

    def setPeriodicMovementCheckRequired(self, a_enabled, a_handle=None):
        return _HySpexLibrary.Stage_setPeriodicMovementCheckRequired(self, a_enabled, a_handle)

    def getMoveStatusFromPeriodicChecker(self):
        return _HySpexLibrary.Stage_getMoveStatusFromPeriodicChecker(self)

    def isConnected(self):
        return _HySpexLibrary.Stage_isConnected(self)

    def getUnits(self, a_string):
        return _HySpexLibrary.Stage_getUnits(self, a_string)

    def getType(self, a_string):
        return _HySpexLibrary.Stage_getType(self, a_string)

    def getId(self):
        return _HySpexLibrary.Stage_getId(self)

    def getNegativeDirectionLabel(self, a_string):
        return _HySpexLibrary.Stage_getNegativeDirectionLabel(self, a_string)

    def getPositiveDirectionLabel(self, a_string):
        return _HySpexLibrary.Stage_getPositiveDirectionLabel(self, a_string)

# Register Stage in _HySpexLibrary:
_HySpexLibrary.Stage_swigregister(Stage)

class StageManager(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _HySpexLibrary.StageManager_swiginit(self, _HySpexLibrary.new_StageManager(*args))
    __swig_destroy__ = _HySpexLibrary.delete_StageManager

    def readStagesConfigFile(self, a_path):
        return _HySpexLibrary.StageManager_readStagesConfigFile(self, a_path)

    def detectStages(self):
        return _HySpexLibrary.StageManager_detectStages(self)

    def getStageCount(self):
        return _HySpexLibrary.StageManager_getStageCount(self)

    def getStageByIndex(self, a_index):
        return _HySpexLibrary.StageManager_getStageByIndex(self, a_index)

# Register StageManager in _HySpexLibrary:
_HySpexLibrary.StageManager_swigregister(StageManager)



